# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""DeleteRequest

    DeleteRequest(;
        ids=nothing,
        filter=nothing,
        delete_all=false,
    )

    - ids::Vector{String}
    - filter::Vector{DocumentMetadataFilter}
    - delete_all::Bool
"""
Base.@kwdef mutable struct DeleteRequest <: OpenAPI.APIModel
    ids::Union{Nothing, Vector{String}} = nothing
    filter::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DocumentMetadataFilter} }
    delete_all::Union{Nothing, Bool} = false

    function DeleteRequest(ids, filter, delete_all, )
        OpenAPI.validate_property(DeleteRequest, Symbol("ids"), ids)
        OpenAPI.validate_property(DeleteRequest, Symbol("filter"), filter)
        OpenAPI.validate_property(DeleteRequest, Symbol("delete_all"), delete_all)
        return new(ids, filter, delete_all, )
    end
end # type DeleteRequest

const _property_types_DeleteRequest = Dict{Symbol,String}(Symbol("ids")=>"Vector{String}", Symbol("filter")=>"Vector{DocumentMetadataFilter}", Symbol("delete_all")=>"Bool", )
OpenAPI.property_type(::Type{ DeleteRequest }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_DeleteRequest[name]))}

function check_required(o::DeleteRequest)
    true
end

function OpenAPI.validate_property(::Type{ DeleteRequest }, name::Symbol, val)
end
