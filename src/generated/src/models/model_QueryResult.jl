# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""
    QueryResult(;
        query=nothing,
        results=nothing,
    )

    - query::String
    - results::Vector{DocumentChunkWithScore}
"""
Base.@kwdef mutable struct QueryResult <: OpenAPI.APIModel
    query::Union{Nothing, String} = nothing
    results::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{DocumentChunkWithScore} }

    function QueryResult(query, results, )
        OpenAPI.validate_property(QueryResult, Symbol("query"), query)
        OpenAPI.validate_property(QueryResult, Symbol("results"), results)
        return new(query, results, )
    end
end # type QueryResult

const _property_types_QueryResult = Dict{Symbol,String}(Symbol("query")=>"String", Symbol("results")=>"Vector{DocumentChunkWithScore}", )
OpenAPI.property_type(::Type{ QueryResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_QueryResult[name]))}

function check_required(o::QueryResult)
    o.query === nothing && (return false)
    o.results === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ QueryResult }, name::Symbol, val)
end
